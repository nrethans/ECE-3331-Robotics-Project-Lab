$date
	Fri Apr 12 11:40:08 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module testbench $end
$var wire 1 ! Kick $end
$var wire 1 " FWDB $end
$var wire 1 # FWDA $end
$var wire 1 $ Enable $end
$var wire 1 % BWDB $end
$var wire 1 & BWDA $end
$var parameter 32 ' PRD $end
$var reg 1 ( Attack $end
$var reg 1 ) Defense $end
$var reg 1 * DisableA $end
$var reg 1 + DisableB $end
$var reg 1 , IR_10K_Reciever $end
$var reg 1 - IR_1K_Reciever $end
$var reg 1 . IR_Ball_Detect $end
$var reg 1 / Inductance_Sense $end
$var reg 1 0 LeftMic $end
$var reg 1 1 Reset $end
$var reg 1 2 RightMic $end
$var reg 1 3 clk $end
$scope module UUT $end
$var wire 1 ( Attack $end
$var wire 1 4 BWD_A $end
$var wire 1 5 BWD_B $end
$var wire 1 ) Defense $end
$var wire 1 * DisableA $end
$var wire 1 + DisableB $end
$var wire 2 6 Duty_SelA [1:0] $end
$var wire 2 7 Duty_SelB [1:0] $end
$var wire 1 8 FWD_A $end
$var wire 1 9 FWD_B $end
$var wire 1 , IR_10K_Reciever $end
$var wire 1 - IR_1K_Reciever $end
$var wire 1 . IR_Ball_Detect $end
$var wire 1 / Inductance_Sense $end
$var wire 1 0 LeftMic $end
$var wire 1 1 Reset $end
$var wire 1 2 RightMic $end
$var wire 1 3 clk $end
$var wire 1 : Pause $end
$var wire 1 ; PWM_Signal_B $end
$var wire 1 < PWM_Signal_A $end
$var wire 1 = Kicker_EN $end
$var wire 1 > Kicker_Done $end
$var wire 1 ! Kick $end
$var wire 1 ? IR_1K $end
$var wire 1 @ IR_10K $end
$var wire 1 A Goal_SM_Done $end
$var wire 1 B Goal_Detection_SM_EN $end
$var wire 1 C FWD_B3 $end
$var wire 1 D FWD_B2 $end
$var wire 1 E FWD_B1 $end
$var wire 1 F FWD_A3 $end
$var wire 1 G FWD_A2 $end
$var wire 1 H FWD_A1 $end
$var wire 1 " FWDB $end
$var wire 1 # FWDA $end
$var wire 1 $ Enable $end
$var wire 2 I Duty_SelB3 [1:0] $end
$var wire 2 J Duty_SelB2 [1:0] $end
$var wire 2 K Duty_SelB1 [1:0] $end
$var wire 2 L Duty_SelA3 [1:0] $end
$var wire 2 M Duty_SelA2 [1:0] $end
$var wire 2 N Duty_SelA1 [1:0] $end
$var wire 1 O Direction $end
$var wire 1 P Defense_SM_EN $end
$var wire 1 Q Defense_SM_Done $end
$var wire 1 R Ball_SM_Done $end
$var wire 1 S Ball_Detection_SM_EN $end
$var wire 1 T BWD_B3 $end
$var wire 1 U BWD_B2 $end
$var wire 1 V BWD_B1 $end
$var wire 1 W BWD_A3 $end
$var wire 1 X BWD_A2 $end
$var wire 1 Y BWD_A1 $end
$var wire 1 % BWDB $end
$var wire 1 & BWDA $end
$scope module U0 $end
$var wire 1 ( Attack $end
$var wire 1 ) Defense $end
$var wire 1 1 Reset $end
$var wire 1 3 clk $end
$var wire 1 > Shooter_Done $end
$var wire 1 A Goal_SM_Done $end
$var wire 1 Q Defense_SM_Done $end
$var wire 1 R Ball_SM_Done $end
$var parameter 3 Z BALL_DETECTION $end
$var parameter 3 [ DEFENSE $end
$var parameter 3 \ GOAL_DETECTION $end
$var parameter 3 ] IDLE $end
$var parameter 3 ^ SHOOT $end
$var reg 2 _ AttackEdge [1:0] $end
$var reg 1 S Ball_Detection_SM_EN $end
$var reg 2 ` DefenseEdge [1:0] $end
$var reg 1 P Defense_SM_EN $end
$var reg 1 B Goal_Detection_SM_EN $end
$var reg 3 a STATE [2:0] $end
$var reg 1 = Shooter_EN $end
$upscope $end
$scope module U1 $end
$var wire 1 . Ball_Detect $end
$var wire 1 S Enable $end
$var wire 1 / Inductance $end
$var wire 1 3 clk $end
$var wire 1 : Pause $end
$var wire 1 O BallSignal $end
$var parameter 3 b IDLE $end
$var parameter 3 c INDUCTANCE $end
$var parameter 3 d PAUSE $end
$var parameter 3 e TURN_LEFT $end
$var parameter 3 f TURN_RIGHT $end
$var reg 1 Y BWD_A $end
$var reg 1 V BWD_B $end
$var reg 1 R Done $end
$var reg 2 g Duty_SelA [1:0] $end
$var reg 2 h Duty_SelB [1:0] $end
$var reg 2 i Enable_Edge [1:0] $end
$var reg 1 H FWD_A $end
$var reg 1 E FWD_B $end
$var reg 29 j IND_COUNT [28:0] $end
$var reg 1 k IND_FLG $end
$var reg 3 l PREV_STATE [2:0] $end
$var reg 3 m STATE [2:0] $end
$upscope $end
$scope module U2 $end
$var wire 1 B Enable $end
$var wire 1 / Inductance $end
$var wire 1 3 clk $end
$var wire 1 : Pause $end
$var wire 1 ? IR_1k $end
$var wire 1 @ IR_10k $end
$var parameter 3 n IDLE $end
$var parameter 3 o INDUCTANCE $end
$var parameter 3 p PAUSE $end
$var parameter 3 q SMALL_LEFT $end
$var parameter 3 r SMALL_RIGHT $end
$var parameter 3 s TURN_RIGHT $end
$var reg 1 X BWD_A $end
$var reg 1 U BWD_B $end
$var reg 29 t COUNT [28:0] $end
$var reg 1 A Done $end
$var reg 2 u Duty_SelA [1:0] $end
$var reg 2 v Duty_SelB [1:0] $end
$var reg 2 w Enable_Edge [1:0] $end
$var reg 1 G FWD_A $end
$var reg 1 D FWD_B $end
$var reg 1 x IND_FLG $end
$var reg 3 y PREV_STATE [2:0] $end
$var reg 1 z SL_FLG $end
$var reg 1 { SR_FLG $end
$var reg 3 | STATE [2:0] $end
$upscope $end
$scope module U3 $end
$var wire 1 P Enable $end
$var wire 1 / Inductance $end
$var wire 1 3 clk $end
$var wire 1 : Pause $end
$var wire 1 O MicrophoneDirection $end
$var parameter 3 } IDLE $end
$var parameter 3 ~ INDUCTANCE $end
$var parameter 3 !" INDUCTANCE_PAUSE $end
$var parameter 3 "" LEFT_PAUSE $end
$var parameter 3 #" RIGHT_PAUSE $end
$var parameter 3 $" TURN_LEFT $end
$var parameter 3 %" TURN_RIGHT $end
$var reg 1 W BWDA $end
$var reg 1 T BWDB $end
$var reg 1 Q Done $end
$var reg 2 &" DutyCycleA [1:0] $end
$var reg 2 '" DutyCycleB [1:0] $end
$var reg 2 (" Enable_Edge [1:0] $end
$var reg 1 F FWDA $end
$var reg 1 C FWDB $end
$var reg 3 )" STATE [2:0] $end
$upscope $end
$scope module U4 $end
$var wire 1 = Enable $end
$var wire 1 3 clk $end
$var parameter 1 *" IDLE $end
$var parameter 1 +" KICK $end
$var reg 4 ," Count [3:0] $end
$var reg 1 > Done $end
$var reg 2 -" EnableEdge [1:0] $end
$var reg 1 ! Kick $end
$var reg 1 ." STATE $end
$upscope $end
$scope module U5 $end
$var wire 1 3 CLK $end
$var wire 1 /" L $end
$var wire 1 0 LeftMic $end
$var wire 1 0" R $end
$var wire 1 2 RightMic $end
$var wire 1 1" W1 $end
$var wire 1 O Direction $end
$var reg 1 2" LLMic $end
$var reg 1 3" LMic $end
$var reg 1 4" RMic $end
$var reg 1 5" RRMic $end
$scope module U0 $end
$var wire 1 /" CLK $end
$var wire 1 0" D $end
$var reg 1 1" Q $end
$upscope $end
$scope module U1 $end
$var wire 1 3 CLK $end
$var wire 1 1" D $end
$var reg 1 O Q $end
$upscope $end
$upscope $end
$scope module U6A $end
$var wire 1 3 clk $end
$var wire 1 6" enable $end
$var wire 1 - ir $end
$var wire 1 7" reset $end
$var reg 2 8" EdgeTest [1:0] $end
$var reg 16 9" Hz [15:0] $end
$var reg 24 :" count [23:0] $end
$var reg 1 ? ir1k $end
$var reg 16 ;" temp [15:0] $end
$upscope $end
$scope module U6B $end
$var wire 1 3 clk $end
$var wire 1 <" enable $end
$var wire 1 , ir $end
$var wire 1 =" reset $end
$var reg 2 >" EdgeTest [1:0] $end
$var reg 16 ?" Hz [15:0] $end
$var reg 24 @" count [23:0] $end
$var reg 1 @ ir10k $end
$var reg 16 A" temp [15:0] $end
$upscope $end
$scope module U7 $end
$var wire 2 B" SnsDisable [1:0] $end
$var wire 1 3 clk $end
$var parameter 2 C" Debounce $end
$var parameter 2 D" Disable $end
$var parameter 28 E" FullCount $end
$var parameter 28 F" HalfCount $end
$var parameter 2 G" Idle $end
$var reg 1 $ Enable $end
$var reg 1 : Pause $end
$var reg 2 H" STATE [1:0] $end
$var reg 28 I" Timer [27:0] $end
$upscope $end
$scope module U8A $end
$var wire 2 J" DutyCycle [1:0] $end
$var wire 1 3 clk $end
$var parameter 14 K" HalfDuty $end
$var parameter 14 L" QuarterDuty $end
$var parameter 14 M" ThreeQuarterDuty $end
$var reg 1 < PulseSignal $end
$var reg 14 N" count [13:0] $end
$upscope $end
$scope module U8B $end
$var wire 2 O" DutyCycle [1:0] $end
$var wire 1 3 clk $end
$var parameter 14 P" HalfDuty $end
$var parameter 14 Q" QuarterDuty $end
$var parameter 14 R" ThreeQuarterDuty $end
$var reg 1 ; PulseSignal $end
$var reg 14 S" count [13:0] $end
$upscope $end
$scope module U9A $end
$var wire 1 4 BWD $end
$var wire 1 8 FWD $end
$var wire 1 < Pulse $end
$var wire 1 # SerialOut1 $end
$var wire 1 & SerialOut2 $end
$upscope $end
$scope module U9B $end
$var wire 1 5 BWD $end
$var wire 1 9 FWD $end
$var wire 1 ; Pulse $end
$var wire 1 " SerialOut1 $end
$var wire 1 % SerialOut2 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10011100010000 R"
b1001110001000 Q"
b1100001101010 P"
b10011100010000 M"
b1001110001000 L"
b1100001101010 K"
b0 G"
b100011110000110100011000000 F"
b1000111100001101000110000000 E"
b1 D"
b10 C"
1+"
0*"
b1 %"
b10 $"
b11 #"
b100 ""
b110 !"
b101 ~
b0 }
b1 s
b10 r
b11 q
b100 p
b101 o
b0 n
b11 f
b100 e
b1 d
b10 c
b0 b
b11 ^
b0 ]
b10 \
b100 [
b1 Z
b10 '
$end
#0
$dumpvars
b0 S"
b0 O"
b0 N"
b0 J"
b0 I"
b0 H"
b0 B"
b0 A"
b0 @"
b0 ?"
b0 >"
0="
1<"
b0 ;"
b0 :"
b0 9"
b0 8"
07"
16"
05"
04"
03"
02"
01"
00"
0/"
0."
b0 -"
b0 ,"
b0 )"
b0 ("
b0 '"
b0 &"
b0 |
0{
0z
b0 y
0x
b0 w
b0 v
b0 u
b0 t
b0 m
b0 l
1k
b0 j
b0 i
b0 h
b0 g
b0 a
b0 `
b0 _
0Y
0X
0W
0V
0U
0T
0S
1R
1Q
0P
0O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
0H
0G
0F
0E
0D
0C
0B
1A
0@
0?
0>
0=
x<
x;
0:
09
08
b0 7
b0 6
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0&
0%
1$
0#
0"
0!
$end
#1
b1 :"
b1 @"
1{
1z
1x
1<
b1 N"
1;
b1 S"
13
#2
03
#3
b10 :"
b10 @"
b10 S"
b10 N"
13
#4
03
#5
b11 :"
b11 @"
b11 N"
b11 S"
13
#6
03
#7
b100 :"
b100 @"
b100 S"
b100 N"
13
#8
03
#9
b101 :"
b101 @"
b101 N"
b101 S"
13
#10
03
1(
#11
b110 :"
b110 @"
1#
1"
b10 6
b10 J"
18
19
b110 S"
b110 N"
0R
b10 N
b10 g
1H
1E
b11 m
b1 i
1S
b1 a
b1 _
13
#12
03
#13
b111 :"
b111 @"
b10 7
b10 O"
b0 6
b0 J"
b11 _
b10 K
b10 h
b0 N
b0 g
b100 m
b11 l
b11 i
b111 N"
b111 S"
13
#14
03
#15
b1000 :"
b1000 @"
b1000 S"
b1000 N"
b100 l
13
#16
03
#17
b1001 :"
b1001 @"
b1001 N"
b1001 S"
13
#18
03
#19
b1010 :"
b1010 @"
b1010 S"
b1010 N"
13
#20
03
#21
b1011 :"
b1011 @"
b1011 N"
b1011 S"
13
#22
03
#23
b1100 :"
b1100 @"
b1100 S"
b1100 N"
13
#24
03
#25
b1101 :"
b1101 @"
b1101 N"
b1101 S"
13
#26
03
#27
b1110 :"
b1110 @"
b1110 S"
b1110 N"
13
#28
03
#29
b1111 :"
b1111 @"
b1111 N"
b1111 S"
13
#30
03
1.
0(
#31
b10000 :"
b10000 @"
0#
0"
b0 7
b0 O"
08
09
b10000 S"
b10000 N"
1R
b0 K
b0 h
0H
0E
b0 m
b10 _
13
#32
03
#33
b10001 :"
b10001 @"
0S
1B
b10 a
b0 _
b10001 N"
b10001 S"
13
#34
03
#35
b10010 :"
b10010 @"
b10010 S"
b10010 N"
1!
b1 ,"
1."
b1 -"
b10 i
0B
1=
b11 a
13
#36
03
#37
b10011 :"
b10011 @"
b0 i
b10 ,"
b11 -"
b10011 N"
b10011 S"
13
#38
03
#39
b10100 :"
b10100 @"
b10100 S"
b10100 N"
b11 ,"
13
#40
03
