$date
	Tue Mar 12 17:50:28 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module testbench $end
$var wire 1 ! FWD_EN_B $end
$var wire 1 " FWD_EN_A $end
$var wire 1 # EncoderB_RST $end
$var wire 1 $ EncoderA_RST $end
$var wire 2 % Duty_Sel [1:0] $end
$var wire 1 & BWD_EN_B $end
$var wire 1 ' BWD_EN_A $end
$var reg 16 ( CountA [15:0] $end
$var reg 16 ) CountB [15:0] $end
$var reg 4 * Direction [3:0] $end
$var reg 1 + Enable $end
$var reg 1 , INDUCTANCE $end
$var reg 1 - PAUSE $end
$var reg 1 . clk $end
$var reg 1 / reset $end
$scope module UUT $end
$var wire 16 0 CountA [15:0] $end
$var wire 16 1 CountB [15:0] $end
$var wire 4 2 Direction [3:0] $end
$var wire 1 + Enable $end
$var wire 1 $ EncoderA_RST $end
$var wire 1 # EncoderB_RST $end
$var wire 1 , INDUCTANCE $end
$var wire 1 - PAUSE $end
$var wire 1 . clk $end
$var wire 1 / reset $end
$var wire 1 3 MotorEncoderB_RST $end
$var wire 1 4 MotorEncoderA_RST $end
$var wire 1 ! FWD_EN_B $end
$var wire 1 " FWD_EN_A $end
$var wire 2 5 Duty_Sel [1:0] $end
$var wire 1 & BWD_EN_B $end
$var wire 1 ' BWD_EN_A $end
$scope module u_Simple_Moore_Chart $end
$var wire 1 ' BWD_EN_A $end
$var wire 1 & BWD_EN_B $end
$var wire 4 6 Direction [3:0] $end
$var wire 2 7 Duty_Sel [1:0] $end
$var wire 1 + Enable $end
$var wire 1 " FWD_EN_A $end
$var wire 1 ! FWD_EN_B $end
$var wire 1 , INDUCTANCE $end
$var wire 16 8 MotorEncoderCountA [15:0] $end
$var wire 16 9 MotorEncoderCountB [15:0] $end
$var wire 1 - PAUSE $end
$var wire 1 . clk $end
$var wire 1 / reset $end
$var wire 1 3 MotorEncoderB_RST $end
$var wire 1 4 MotorEncoderA_RST $end
$var parameter 6 : state_type_is_Simple_Moore_Chart_IN_DONE $end
$var parameter 6 ; state_type_is_Simple_Moore_Chart_IN_Forward_Stage1 $end
$var parameter 6 < state_type_is_Simple_Moore_Chart_IN_Forward_Stage2 $end
$var parameter 6 = state_type_is_Simple_Moore_Chart_IN_INDUCTANCE $end
$var parameter 6 > state_type_is_Simple_Moore_Chart_IN_Idle $end
$var parameter 6 ? state_type_is_Simple_Moore_Chart_IN_PAUSE $end
$var parameter 6 @ state_type_is_Simple_Moore_Chart_IN_PAUSE1 $end
$var parameter 6 A state_type_is_Simple_Moore_Chart_IN_PAUSE10 $end
$var parameter 6 B state_type_is_Simple_Moore_Chart_IN_PAUSE11 $end
$var parameter 6 C state_type_is_Simple_Moore_Chart_IN_PAUSE12 $end
$var parameter 6 D state_type_is_Simple_Moore_Chart_IN_PAUSE13 $end
$var parameter 6 E state_type_is_Simple_Moore_Chart_IN_PAUSE14 $end
$var parameter 6 F state_type_is_Simple_Moore_Chart_IN_PAUSE15 $end
$var parameter 6 G state_type_is_Simple_Moore_Chart_IN_PAUSE2 $end
$var parameter 6 H state_type_is_Simple_Moore_Chart_IN_PAUSE3 $end
$var parameter 6 I state_type_is_Simple_Moore_Chart_IN_PAUSE4 $end
$var parameter 6 J state_type_is_Simple_Moore_Chart_IN_PAUSE5 $end
$var parameter 6 K state_type_is_Simple_Moore_Chart_IN_PAUSE6 $end
$var parameter 6 L state_type_is_Simple_Moore_Chart_IN_PAUSE7 $end
$var parameter 6 M state_type_is_Simple_Moore_Chart_IN_PAUSE8 $end
$var parameter 6 N state_type_is_Simple_Moore_Chart_IN_PAUSE9 $end
$var parameter 6 O state_type_is_Simple_Moore_Chart_IN_Turn1125Left $end
$var parameter 6 P state_type_is_Simple_Moore_Chart_IN_Turn1125Right $end
$var parameter 6 Q state_type_is_Simple_Moore_Chart_IN_Turn225Left $end
$var parameter 6 R state_type_is_Simple_Moore_Chart_IN_Turn225Right $end
$var parameter 6 S state_type_is_Simple_Moore_Chart_IN_Turn3375Left $end
$var parameter 6 T state_type_is_Simple_Moore_Chart_IN_Turn3375Right $end
$var parameter 6 U state_type_is_Simple_Moore_Chart_IN_Turn45Left $end
$var parameter 6 V state_type_is_Simple_Moore_Chart_IN_Turn45Right $end
$var parameter 6 W state_type_is_Simple_Moore_Chart_IN_Turn5625Left $end
$var parameter 6 X state_type_is_Simple_Moore_Chart_IN_Turn5625Right $end
$var parameter 6 Y state_type_is_Simple_Moore_Chart_IN_Turn675Left $end
$var parameter 6 Z state_type_is_Simple_Moore_Chart_IN_Turn675Right $end
$var parameter 6 [ state_type_is_Simple_Moore_Chart_IN_Turn7875Left $end
$var parameter 6 \ state_type_is_Simple_Moore_Chart_IN_Turn7875Right $end
$var parameter 6 ] state_type_is_Simple_Moore_Chart_IN_Turn90Left $end
$var parameter 6 ^ state_type_is_Simple_Moore_Chart_IN_WAIT $end
$var reg 1 _ BWD_EN_A_1 $end
$var reg 1 ` BWD_EN_B_1 $end
$var reg 2 a Duty_Sel_1 [1:0] $end
$var reg 1 b FWD_EN_A_1 $end
$var reg 1 c FWD_EN_B_1 $end
$var reg 1 4 MotorEncoderA_RST_1 $end
$var reg 1 3 MotorEncoderB_RST_1 $end
$var reg 6 d is_Simple_Moore_Chart [5:0] $end
$var reg 6 e is_Simple_Moore_Chart_next [5:0] $end
$scope begin Simple_Moore_Chart_1_process $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100100 ^
b100011 ]
b100010 \
b100001 [
b100000 Z
b11111 Y
b11110 X
b11101 W
b11100 V
b11011 U
b11010 T
b11001 S
b11000 R
b10111 Q
b10110 P
b10101 O
b10100 N
b10011 M
b10010 L
b10001 K
b10000 J
b1111 I
b1110 H
b1101 G
b1100 F
b1011 E
b1010 D
b1001 C
b1000 B
b111 A
b110 @
b101 ?
b100 >
b11 =
b10 <
b1 ;
b0 :
$end
#0
$dumpvars
b100 e
b100 d
0c
0b
b0 a
0`
0_
b0 9
b0 8
b0 7
b0 6
b0 5
14
13
b0 2
b0 1
b0 0
0/
1.
0-
0,
0+
b0 *
b0 )
b0 (
0'
0&
b0 %
1$
1#
0"
0!
$end
#1
0.
#2
1.
#3
0.
#4
1#
13
1$
14
b100100 d
b100011 e
1.
1+
#5
0.
#6
1"
1b
0#
03
0$
04
b100011 d
1.
#7
0.
#8
1#
13
1$
14
0"
0b
b101 d
b101 e
1.
1-
0+
#9
0.
#10
1.
#11
0.
#12
1"
1b
0#
03
0$
04
b100011 d
b100011 e
1.
0-
#13
0.
#14
1.
#15
0.
#16
1&
1`
1'
1_
1#
13
1$
14
0"
0b
b11 d
b11 e
1.
1,
#17
0.
#18
1.
#19
0.
#20
1.
0,
#21
0.
#22
1.
#23
0.
#24
1.
b10100 (
b10100 0
b10100 8
#25
0.
#26
1.
#27
0.
#28
0#
03
0$
04
0&
0`
0'
0_
b0 d
b100 e
1.
b10100 )
b10100 1
b10100 9
#29
0.
#30
1#
13
1$
14
b100 d
1.
#31
0.
#32
1.
